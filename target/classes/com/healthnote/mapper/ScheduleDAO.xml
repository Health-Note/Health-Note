<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.healthnote.schedule.dao.ScheduleDAO">
	
	<select id="getAllWeekSchedule" parameterType="hashmap" resultType="com.healthnote.vo.ScheduleDTO">
		select  t2.name, t1.date, t1.phonenum, t1.start_time, t1.end_time, t1.finish_dncd
		from schedule t1, members t2
		where 1=1
		and t1.phonenum = t2.phonenum
		and t2.email = #{trainerId}
		and t1.date between case when weekday(#{today}) = 0 then #{today}
								 when weekday(#{today}) = 1 then date_add(#{today}, INTERVAL -1 DAY)
		                         when weekday(#{today}) = 2 then date_add(#{today}, INTERVAL -2 DAY)
		                         when weekday(#{today}) = 3 then date_add(#{today}, INTERVAL -3 DAY)
		                         when weekday(#{today}) = 4 then date_add(#{today}, INTERVAL -4 DAY)
		                         when weekday(#{today}) = 5 then date_add(#{today}, INTERVAL -5 DAY)
		                         when weekday(#{today}) = 6 then date_add(#{today}, INTERVAL -6 DAY)
		                         else ''
		                         end
		                         
		                         and
		                         
		                    case when weekday(#{today}) = 0 then date_add(#{today}, INTERVAL 6 DAY)
								 when weekday(#{today}) = 1 then date_add(#{today}, INTERVAL 5 DAY)
		                         when weekday(#{today}) = 2 then date_add(#{today}, INTERVAL 4 DAY)
		                         when weekday(#{today}) = 3 then date_add(#{today}, INTERVAL 3 DAY)
		                         when weekday(#{today}) = 4 then date_add(#{today}, INTERVAL 2 DAY)
		                         when weekday(#{today}) = 5 then date_add(#{today}, INTERVAL 1 DAY)
		                         when weekday(#{today}) = 6 then #{today}
		                         else ''
		                         end
	</select>
	
	<select id="getDailyRoutine" parameterType="hashmap" resultType="com.healthnote.vo.RoutineDTO" >
		select *
		from routine
		where 1=1
			and phonenum = #{memberId}
			and date = #{today}
		    
	</select>
		
	<select id="getWeekRoutine" parameterType="hashmap" resultType="com.healthnote.vo.RoutineDTO" >
		select *
		from routine
		where 1=1
		    and phonenum = #{memberId}
		    and date between case when weekday(#{today}) = 0 then #{today}
									 when weekday(#{today}) = 1 then date_add(#{today}, INTERVAL -1 DAY)
				                     when weekday(#{today}) = 2 then date_add(#{today}, INTERVAL -2 DAY)
				                     when weekday(#{today}) = 3 then date_add(#{today}, INTERVAL -3 DAY)
				                     when weekday(#{today}) = 4 then date_add(#{today}, INTERVAL -4 DAY)
				                     when weekday(#{today}) = 5 then date_add(#{today}, INTERVAL -5 DAY)
				                     when weekday(#{today}) = 6 then date_add(#{today}, INTERVAL -6 DAY)
				                     else ''
				                     end
				                     
				                     and
				                      
				                case when weekday(#{today}) = 0 then date_add(#{today}, INTERVAL 6 DAY)
									 when weekday(#{today}) = 1 then date_add(#{today}, INTERVAL 5 DAY)
				                     when weekday(#{today}) = 2 then date_add(#{today}, INTERVAL 4 DAY)
				                     when weekday(#{today}) = 3 then date_add(#{today}, INTERVAL 3 DAY)
				                     when weekday(#{today}) = 4 then date_add(#{today}, INTERVAL 2 DAY)
				                     when weekday(#{today}) = 5 then date_add(#{today}, INTERVAL 1 DAY)
				                     when weekday(#{today}) = 6 then #{today}
				                     else ''
				                     end
        order by date asc
	</select>
	
	<update id="changeRoutineSets"  parameterType="hashmap">
		update routine
		set sets = #{sets}
		where 1=1
		and date = #{date}
		and phonenum = #{memberId}
		and exercisename = #{exercisename}
	</update>
	
	<update id="changeRoutineReps"  parameterType="hashmap">
		update routine
		set reps = #{reps}
		where 1=1
		and date = #{date}
		and phonenum = #{memberId}
		and exercisename = #{exercisename}
	</update>
	
	<update id="updateScheduleFinishDncd"  parameterType="hashmap">
		update schedule
		set finish_dncd = #{finish_dncd}
		where 1=1
		and date = #{date}
		and phonenum = #{memberId}
	</update>
		
	<delete id="deleteRoutinebyDate" parameterType="hashmap">
		delete from routine
		where 1=1
		and date = #{date}
		and phonenum = #{memberId} 
	</delete>
	
	<delete id="deleteRoutinebyExercise" parameterType="hashmap">
		delete from routine
		where 1=1
		and date = #{date}
		and phonenum = #{memberId} 
		and exercisename = #{exercisename}
	</delete>
	
	<delete id="deleteSchedule" parameterType="hashmap">
		delete from schedule
		where 1=1
		and date = #{date}
		and phonenum = #{memberId} 
	</delete>
	
	<insert id="insertRoutine" parameterType="com.healthnote.vo.RoutineDTO">
		insert into routine values(#{date}, #{phonenum}, #{exercisename}, #{sets}, #{reps})
	</insert>
		
	<update id="chanegeSchedule"  parameterType="hashmap">
		update schedule 
		set <if test ="after_date != null">date = #{after_date},</if>
		    <if test ="start_time != null">start_time = #{start_time},</if>
		    <if test ="end_time != null">end_time = #{end_time},</if>
			finish_dncd = #{finish_dncd}
		where 1=1
		and date = #{before_date}
		and phonenum = #{phonenum}
	</update>

</mapper>


